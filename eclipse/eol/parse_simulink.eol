"Querying Simulink Models ".println();
// QUERY
var implement=SLREQ!L_Implement.all;
var derive=SLREQ!L_Derive.all;
var relate=SLREQ!L_Relate.all;
var refine=SLREQ!L_Refine.all;
var confirm=SLREQ!L_Confirm.all;
var verify=SLREQ!L_Verify.all;
var justify=SLREQ!L_Justify.all;

var reqSet=SLREQ!RequirementSet.all;
var reqs=SLREQ!Requirement.all;
var just=SLREQ!Justification.all;
var refs=SLREQ!Reference.all;
var functional=SLREQ!RQ_Functional.all;  
var container=SLREQ!RF_Container.all; 

var linkset=SLREQ!LinkSet.all;
var link=SLREQ!Link.all; 
var implement=SLREQ!L_Implement.all;
var derive=SLREQ!L_Derive.all;

var total = reqs.size()+just.size()+refs.size() + link.size() + linkset.size() + reqSet.size() ;
(total.println("elements:") == SLREQ.allContents().size());

var gtmBoundary = GTM!GlobalTraceModel.all.first;

var traceUID : Integer = 0;

var i : Integer = 0;
while (i < link.size())
{
		var linkType = link.at(i).getProperty("Type");
		
		if (linkType == "Derive") {	
			var sourcePrefix = "";
			var srcFile = link.at(i).getSource().getProperty("artifact").asString();
			if ("crs_req.slreqx".isSubstringOf(srcFile))
				sourcePrefix = "crs_req.slreqx-";
			else if ("crs_req_func_spec.slreqx".isSubstringOf(srcFile)) 
				sourcePrefix = "crs_req_func_spec.slreqx-";
			else
				sourcePrefix = srcFile;

			var destPrefix = "";
			var destFile = link.at(i).getDestination().getProperty("artifact").asString();
			if ("crs_req.slreqx".isSubstringOf(destFile))
				destPrefix = "crs_req.slreqx-";
			else if ("crs_req_func_spec.slreqx".isSubstringOf(destFile)) 
				destPrefix = "crs_req_func_spec.slreqx-";
			else
				destPrefix = destFile;			
		
			var artIDSysReq =   sourcePrefix + link.at(i).getSource().getProperty("id").asString();
			var artIDFuncReq =  destPrefix + link.at(i).getDestination().getProperty("id").asString().replace("#","");
			
			var systemRequirement = gtmBoundary.sysRequirements.selectOne(p : GTM!SystemRequirement | p.artifactID = artIDSysReq);
			var funcRequirement = gtmBoundary.funcRequirements.selectOne(p : GTM!FunctionalRequirement | p.artifactID = artIDFuncReq);
			
			var sourceArtifact = null;
			var destArtifact = null;
			
	
			if ((systemRequirement == null) and (funcRequirement == null)) {
				sourceArtifact = new GTM!SystemRequirement;
				sourceArtifact.artifactID = artIDSysReq;	
				sourceArtifact.progress = GTM!Progress_Enum#HUNDERD_PERCENT;
				gtmBoundary.sysRequirements.add(sourceArtifact);
				

				destArtifact = new GTM!FunctionalRequirement;
				destArtifact.artifactID = artIDFuncReq;
				destArtifact.progress = GTM!Progress_Enum#HUNDERD_PERCENT;
				gtmBoundary.funcRequirements.add(destArtifact);
				
			}
			else if ((systemRequirement != null) and (funcRequirement == null)) {
				sourceArtifact = systemRequirement;
				
				destArtifact = new GTM!FunctionalRequirement;
				destArtifact.artifactID = artIDFuncReq;
				destArtifact.progress = GTM!Progress_Enum#HUNDERD_PERCENT;
				gtmBoundary.funcRequirements.add(destArtifact);
			
			} 
			else if ((systemRequirement == null) and (funcRequirement != null)) {
				sourceArtifact = new GTM!SystemRequirement;
				sourceArtifact.artifactID = artIDSysReq;	
				sourceArtifact.progress = GTM!Progress_Enum#HUNDERD_PERCENT;
				gtmBoundary.sysRequirements.add(sourceArtifact);
				
				destArtifact = funcRequirement;
			} 			
			else{
				i = i + 1;
				continue;
			}
			
			var traceLink = new GTM!Derive;
			traceLink.source = sourceArtifact;
			traceLink.destination = destArtifact;
			gtmBoundary.deriveTraceLinks.add(traceLink);
			
			sourceArtifact.downstreamArtifacts.add(traceLink);
			destArtifact.upstreamArtifacts.add(traceLink);
			
			traceLink.traceUID = traceUID;
			traceUID = traceUID + 1; 
	}
	
	i = i + 1;
}

i = 0;
while (i < link.size())
{
		var linkType = link.at(i).getProperty("Type");
		
		if (linkType == "Implement") {
		
			var sourcePrefix = "";
			var srcFile = link.at(i).getSource().getProperty("artifact").asString();
			if ("crs_plant.slx".isSubstringOf(srcFile))
				sourcePrefix = "crs_plant.slx-";
			else if ("crs_controllerdic.sldd".isSubstringOf(srcFile)) 
				sourcePrefix = "crs_controllerdic.sldd-";
			else if ("crs_controller.slx".isSubstringOf(srcFile)) 
				sourcePrefix = "crs_controller.slx-";

			else
				sourcePrefix = srcFile;

			var destPrefix = "";
			var destFile = link.at(i).getDestination().getProperty("artifact").asString();
			if ("crs_req.slreqx".isSubstringOf(destFile))
				destPrefix = "crs_req.slreqx-";
			else if ("crs_req_func_spec.slreqx".isSubstringOf(destFile)) 
				destPrefix = "crs_req_func_spec.slreqx-";
			else
				destPrefix = destFile;	
				
				
			var funcReqartID =  destPrefix + link.at(i).getDestination().getProperty("id").asString().replace("#","");
			var modelartID =  sourcePrefix + link.at(i).getSource().getProperty("id").asString();
			var funcRequirement = gtmBoundary.funcRequirements.selectOne(p : GTM!FunctionalRequirement | p.artifactID = funcReqartID);
			var smModel = gtmBoundary.modelBlocks.selectOne(p : GTM!Model | p.artifactID = modelartID);
			
			var sourceArtifact = null;
			var destArtifact = null;
			
			if ((funcRequirement == null) and (smModel == null)) {

				sourceArtifact = new GTM!FunctionalRequirement;
				sourceArtifact.artifactID = funcReqartID;
				sourceArtifact.progress = GTM!Progress_Enum#HUNDERD_PERCENT;
				gtmBoundary.funcRequirements.add(sourceArtifact);			
				
				destArtifact = new GTM!Model;
				destArtifact.artifactID = modelartID;
				destArtifact.progress = GTM!Progress_Enum#HUNDERD_PERCENT;
				gtmBoundary.modelBlocks.add(destArtifact);	
				
			}
			else if ((funcRequirement != null) and (smModel == null)) {
				sourceArtifact = funcRequirement;
				
				destArtifact = new GTM!Model;
				destArtifact.artifactID = modelartID;
				destArtifact.progress = GTM!Progress_Enum#HUNDERD_PERCENT;
				gtmBoundary.modelBlocks.add(destArtifact);	
			
			}
			else if  ((funcRequirement == null) and (smModel != null)) {
				sourceArtifact = new GTM!FunctionalRequirement;
				sourceArtifact.artifactID = funcReqartID;
				sourceArtifact.progress = GTM!Progress_Enum#HUNDERD_PERCENT;
				gtmBoundary.funcRequirements.add(sourceArtifact);	
				
				destArtifact = smModel;
			}
			else {
				i = i + 1;
				
				continue;
				
			}	
			
			var traceLink = new GTM!Implement;
			traceLink.source = sourceArtifact;
			traceLink.destination = destArtifact;
			gtmBoundary.implementTraceLinks.add(traceLink);
			
			sourceArtifact.downstreamArtifacts.add(traceLink);
			destArtifact.upstreamArtifacts.add(traceLink);			
			
			traceLink.traceUID = traceUID;
			traceUID = traceUID + 1; 			
		}			
	i = i + 1;
}
	
i = 0;
while (i < link.size())
{
		var linkType = link.at(i).getProperty("Type");
		
		if (linkType == "Verify") { 
			var sourcePrefix = "";
			var srcFile = link.at(i).getSource().getProperty("artifact").asString();
			if ("DriverSwRequest_Tests.mldatx".isSubstringOf(srcFile))
				sourcePrefix = "DriverSwRequest_Tests.mldatx-";
			else
				sourcePrefix = srcFile;

			var destPrefix = "";
			var destFile = link.at(i).getDestination().getProperty("artifact").asString();
			if ("crs_req.slreqx".isSubstringOf(destFile))
				destPrefix = "crs_req.slreqx-";
			else if ("crs_req_func_spec.slreqx".isSubstringOf(destFile)) 
				destPrefix = "crs_req_func_spec.slreqx-";
			else
				destPrefix = destFile;	
						
			var funcReqArtID = destPrefix + link.at(i).getDestination().getProperty("id").asString().replace("#","");
			var testArtID = sourcePrefix + link.at(i).getSource().getProperty("id").asString();
			var funcRequirement = gtmBoundary.funcRequirements.selectOne(p : GTM!FunctionalRequirement | p.artifactID = funcReqArtID);
			var testBlk = gtmBoundary.testBlocks.selectOne(p : GTM!Test | p.artifactID = testArtID);
			
			var sourceArtifact = null;
			var destArtifact = null;
			
			if ((funcRequirement == null) and (testBlk == null)) {
				sourceArtifact = new GTM!FunctionalRequirement;
				sourceArtifact.artifactID = funcReqArtID;
				sourceArtifact.progress = GTM!Progress_Enum#HUNDERD_PERCENT;
				gtmBoundary.funcRequirements.add(sourceArtifact);
				
				destArtifact = new GTM!Test;
				destArtifact.artifactID = testArtID;
				destArtifact.progress = GTM!Progress_Enum#HUNDERD_PERCENT;
				gtmBoundary.testBlocks.add(destArtifact);
			}
			else if ((funcRequirement != null) and (testBlk == null)) {
				sourceArtifact = funcRequirement;
				
				destArtifact = new GTM!Test;
				destArtifact.artifactID = testArtID;
				destArtifact.progress = GTM!Progress_Enum#HUNDERD_PERCENT;
				gtmBoundary.testBlocks.add(destArtifact);				
			}	
			else if ((funcRequirement == null) and (testBlk != null)) {
				sourceArtifact = new GTM!FunctionalRequirement;
				sourceArtifact.artifactID = funcReqArtID;
				sourceArtifact.progress = GTM!Progress_Enum#HUNDERD_PERCENT;
				gtmBoundary.funcRequirements.add(sourceArtifact);
				
				destArtifact = testBlk;
			}
			else 
			{
				i = i + 1;
				continue;
			}

			
			var traceLink = new GTM!Verify;
			traceLink.source = sourceArtifact;
			traceLink.destination = destArtifact;
			gtmBoundary.verifyTraceLinks.add(traceLink);
			
			sourceArtifact.downstreamArtifacts.add(traceLink);
			destArtifact.upstreamArtifacts.add(traceLink);		
			
			traceLink.traceUID = traceUID;
			traceUID = traceUID + 1; 		
		}			
	i = i + 1;
}
	
	
"Complete".println();